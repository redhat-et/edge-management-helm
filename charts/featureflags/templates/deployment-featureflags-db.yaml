apiVersion: apps/v1
kind: Deployment
metadata:
  name: featureflags-db
  namespace: {{ .Values.namespace }}
  labels:
    app: env-demo
    service: db
    sub: feature_flags
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: env-demo
      service: db
      sub: feature_flags
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: env-demo
        service: db
        sub: feature_flags
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          value: {{ .Values.db.username }}
        - name: POSTGRESQL_PASSWORD
          value: {{ .Values.db.password }}
        - name: PGPASSWORD
          value: {{ .Values.db.adminPassword }}
        - name: POSTGRESQL_MASTER_USER
          value: {{ .Values.db.adminUsername }}
        - name: POSTGRESQL_MASTER_PASSWORD
          value: {{ .Values.db.adminPassword }}
        - name: POSTGRESQL_DATABASE
          value: {{ .Values.db.name }}
        image: {{ .Values.images.postgresql }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - psql
            - -U
            - $(POSTGRESQL_USER)
            - -d
            - $(POSTGRESQL_DATABASE)
            - -c
            - SELECT 1
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        name: featureflags-db
        ports:
        - containerPort: 5432
          name: database
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - psql
            - -U
            - $(POSTGRESQL_USER)
            - -d
            - $(POSTGRESQL_DATABASE)
            - -c
            - SELECT 1
          failureThreshold: 3
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: featureflags-db
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: featureflags
      serviceAccountName: featureflags
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: featureflags-db
